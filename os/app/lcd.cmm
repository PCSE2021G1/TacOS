/*
 * TacOS Source Code
 *    Tokuyama kousen Advanced educational Computer.
 *
 * Copyright (C) 2019 - 2020 by
 *                      Dept. of Computer Science and Electronic Engineering,
 *                      Tokuyama College of Technology, JAPAN
 *
 *   上記著作権者は，Free Software Foundation によって公開されている GNU 一般公
 * 衆利用許諾契約書バージョン２に記述されている条件を満たす場合に限り，本ソース
 * コード(本ソースコードを改変したものを含む．以下同様)を使用・複製・改変・再配
 * 布することを無償で許諾する．
 *
 *   本ソースコードは＊全くの無保証＊で提供されるものである。上記著作権者および
 * 関連機関・個人は本ソースコードに関して，その適用可能性も含めて，いかなる保証
 * も行わない．また，本ソースコードの利用により直接的または間接的に生じたいかな
 * る損害に関しても，その責任を負わない．
 *
 *
 */

/*
 * lcd.cmm : 液晶ディスプレイのドライバ
 *
 * 2020.08.23 : spitestの一部から組み込み用に転用
 * 2019.08.26 : 液晶の上下をもとに戻す．リセット機能を util.cmm に移動する．
 * 2019.08.18 : 液晶の上下を逆にする
 * 2019.08.09 : 新規作成
 *
 * $Id$
 *
 */

#include "spi.hmm"
#include "font.hmm"
#include "lcd.hmm"

char[][][] playlist_font = {
    { //A
    { '\x00','\x00','\x00','\x00','\x00','\x00','\x00','\x00' },  // A00
    { '\x00','\xc0','\xf0','\xfc','\xfc','\xf0','\x00','\x00' },  // A01
    { '\x00','\x00','\x00','\x00','\x00','\x00','\x00','\x00' },  // A02
    { '\x00','\x00','\x00','\x00','\x00','\xc0','\xf0','\xfc' },  // A10
    { '\xff','\xff','\xcf','\xc3','\xc3','\xcf','\xff','\xff' },  // A11
    { '\xfc','\xf0','\xc6','\x00','\x00','\x00','\x00','\x00' },  // A12
    { '\x00','\x00','\x30','\x3c','\x3f','\x3f','\x0f','\x03' },  // A20
    { '\x01','\x01','\x01','\x01','\x01','\x01','\x01','\x01' },  // A21
    { '\x03','\x0f','\x3f','\x3f','\x3c','\x3c','\x00','\x00' }   // A22
    },
    { //B
    { '\x00','\x00','\x00','\x00','\x00','\xfc','\xfc','\xfc' },  // B00
    { '\xfc','\x0c','\x0c','\x0c','\x0c','\x18','\x18','\x18' },  // B01
    { '\x18','\xf0','\xf0','\xf0','\xf0','\x00','\x00','\x00' },  // B02
    { '\x00','\x00','\x00','\x00','\x00','\xff','\xff','\xff' },  // B10
    { '\xff','\x18','\x18','\x18','\x18','\x38','\x38','\x38' },  // B11
    { '\x38','\xc0','\xc0','\xc0','\xc0','\x00','\x00','\x00' },  // B12
    { '\x00','\x00','\x00','\x00','\x00','\x3f','\x3f','\x3f' },  // B20
    { '\x3f','\x30','\x30','\x30','\x30','\x18','\x18','\x18' },  // B21
    { '\x18','\x0f','\x0f','\x0f','\x0f','\x00','\x00','\x00' }   // B22
    },
    { //C
    { '\x00','\x00','\x00','\x00','\x00','\x00','\x00','\x00' },  // C00
    { '\x00','\x00','\x06','\x5f','\x5f','\x06','\x00','\x00' },  // C01
    { '\x00','\x03','\x03','\x00','\x03','\x03','\x00','\x00' },  // C02
    { '\x00','\x7f','\x7f','\x41','\x41','\x00','\x00','\x00' },  // C10
    { '\x00','\x00','\x00','\x00','\x00','\x00','\x00','\x00' },  // C11
    { '\x00','\x00','\x06','\x5f','\x5f','\x06','\x00','\x00' },  // C12
    { '\x00','\x03','\x03','\x00','\x03','\x03','\x00','\x00' },  // C20
    { '\x14','\x7f','\x7f','\x14','\x7f','\x7f','\x14','\x00' },  // C21
    { '\x14','\x7f','\x7f','\x14','\x7f','\x7f','\x14','\x00' }   // C22
    },
    { //D
    { '\x00','\x00','\x00','\x00','\x00','\x00','\x00','\x00' },  // D00
    { '\x00','\x00','\x03','\x07','\x04','\x00','\x00','\x00' },  // D01
    { '\x08','\x0c','\x06','\x03','\x06','\x0c','\x08','\x00' },  // D02
    { '\x14','\x7f','\x7f','\x14','\x7f','\x7f','\x14','\x00' },  // D10
    { '\x00','\x00','\x00','\x00','\x00','\x00','\x00','\x00' },  // D11
    { '\x00','\x00','\x06','\x5f','\x5f','\x06','\x00','\x00' },  // D12
    { '\x80','\x80','\x80','\x80','\x80','\x80','\x80','\x80' },  // D20
    { '\x14','\x7f','\x7f','\x14','\x7f','\x7f','\x14','\x00' },  // D21
    { '\x14','\x7f','\x7f','\x14','\x7f','\x7f','\x14','\x00' }   // D22
    }
};

char[] locateCom = { '\xb0',   // page address
                     '\x10',   // column address Hi = 0x00
                     '\x00',   // column address Lo = 0x00
                     '\xff' }; // EOF

char[] boh = {'\x00','\x00','\x00','\x77','\x77','\x00','\x00','\x00'};

public void putplaylistfont(int i, int j){
    spiWriteLcdDat(playlist_font[i][j], 8);
}

public void putboh(){
    spiWriteLcdDat(boh, 8);
}

// 液晶上でカーソルを(x,y)に移動
public void locateXY(int x, int y) {
  int x8 = x * 8;
  locateCom[0] = chr(0xb0 | y);             // page address
  locateCom[1] = chr(0x10 | (x8>>4));       // column address Hi
  locateCom[2] = chr(0x00 + (x8 & 0x0f));   // column address Lo
  spiWriteLcdCom(locateCom);
}

// カーソル位置に１文字表示
public void putCh(char c) {
  spiWriteLcdDat(font(c), 8);
}

// カーソル位置に文字列表示
public void putStr(char[] str) {
  for (int i=0; str[i]!='\0'; i=i+1) {
    putCh(str[i]);
  }
}

// カーソル位置に桁数を指定して右詰めで10進数を表示
char[] decBuf = array(6);                   // 16bit int なら最大5桁
public void putDec(int val, int width) {
  int v = val;
  int w = 1;
  if (v==0) {
    decBuf[0]='0';
  } else {
    for (w=0; v!=0; w=w+1) {
      decBuf[w]=chr((v % 10) + ord('0'));
      v = v / 10;
    }
  }
  for (int i=w; i<width; i=i+1) {           // 空白で桁数を合わせる
    putCh(' ');
  }
  for (w=w-1; w>=0; w=w-1) {
    putCh(decBuf[w]);
  }
}

public void cls() {
  for (int i=0; i<8; i=i+1) {
    locateXY(0, i);
    for (int j=0; j<16; j=j+1) {
      putCh(' ');
    }
  }
}